version: 2.1
jobs:
  build:
    docker:
      - image: ubuntu:18.04
        environment:
#           QT_VERSION_MAJOR: 5.13
#           QT_VERSION: 5.13.2
#           QT_DIST: /usr/local/Qt-"$QT_VERSION"
#           QT_BASE_SRC: https://download.qt.io/official_releases/qt/"$QT_VERSION_MAJOR"/"$QT_VERSION"/submodules/qtbase-opensource-src-"$QT_VERSION".tar.xz
#           QT_BASE_DIR: /qtbase-opensource-src-"$QT_VERSION"
#           PATH: $QT_DIST/bin:$PATH
    steps:
      - run: DEBIAN_FRONTEND=noninteractive apt update && apt install -y gcc g++ build-essential cmake bash libxcb1-dev libicu-dev libssl-dev linux-headers-generic curl git libxrender-dev 
      - run: DEBIAN_FRONTEND=noninteractive apt install -y -qq libqt4-dev libeigen3-dev protobuf-compiler libprotobuf-dev libdc1394-22 libdc1394-22-dev libv4l-0 libopencv-dev freeglut3-dev
      - run: rm -rf /var/lib/apt/lists/*
      - run: curl -sSL https://download.qt.io/official_releases/qt/"$5.13"/"$5.13.2"/submodules/qtbase-opensource-src-"$5.13.2".tar.xz | tar xJ 
      - run: cd /qtbase-opensource-src-"$5.13.2"
#     && bash ./configure --help \
#     && bash ./configure -opensource -confirm-license -static -no-accessibility -sql-sqlite -sqlite -no-qml-debug \
#        -no-harfbuzz -openssl-linked -qt-pcre -no-dbus -nomake tools \
#        -no-xkbcommon-evdev -no-xinput2 -no-xcb-xlib -no-glib -qt-xcb -no-compile-examples -nomake examples \
#        -no-gif -qt-doubleconversion -no-gtk \
#     && make install 
      # - run: curl -sSL $QT_BASE_SRC | tar xJ cd $QT_BASE_DIR && bash ./configure --help && bash ./configure -opensource -confirm-license -static -no-accessibility -sql-sqlite -sqlite -no-qml-debug -no-harfbuzz -openssl-linked -qt-pcre -no-dbus -nomake tools -no-xkbcommon-evdev -no-xinput2 -no-xcb-xlib -no-glib -qt-xcb -no-compile-examples -nomake examples -no-gif -qt-doubleconversion -no-gtk && make install

workflows:
  version: 2.1
  build_all:
    jobs:
      - build
